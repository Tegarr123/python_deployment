services:
    nginx:
      image: nginx:latest
      ports:
        - "80:80"
      volumes:
        - ./nginx.conf:/etc/nginx/conf.d/default.conf
      depends_on:
        - fastapi
        - postgre-db
      networks:
        - backend
    fastapi:
      container_name: fastapi
      image: ghcr.io/tegarr123/fastapi-image:latest
      # environment:
      #   DB_USER: ${POSTGRES_USER}
      #   DB_PASSWORD: ${POSTGRES_PASSWORD}
      #   DB_NAME: ${POSTGRES_DB}
      #   DB_HOST: postgre-db
      #   CALL_MY_NAME: Tegarr
      env_file: ./app.env
      command: sh -c "python main.py"
      volumes:
        - type: bind
          source: ./app
          target: /app
          read_only: true
      depends_on:
        - postgre-db
      networks:
        - backend

    postgre-db:
      container_name: postgre-db
      image: ghcr.io/tegarr123/db-image:latest
      # build:
      #   context: .
      #   dockerfile: "./db.Dockerfile"
      volumes:
        - postgre-vol:/var/lib/postgresql/data
      # environment:
      #   POSTGRES_USER: ${POSTGRES_USER}
      #   POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      #   POSTGRES_DB: ${POSTGRES_DB}
      env_file: ./db.env
      networks:
        - backend

networks:
  backend:
    driver: bridge

volumes:
  postgre-vol: